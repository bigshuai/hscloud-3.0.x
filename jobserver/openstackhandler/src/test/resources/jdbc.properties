jdbc.driverClassName=com.mysql.jdbc.Driver
#jdbc.url=jdbc:mysql://127.0.0.1:3306/hscloud?useUnicode=true&amp;characterEncoding=utf-8
#jdbc.url=jdbc:mysql://127.0.0.1:3306/testxr?useUnicode=true&amp;characterEncoding=utf-8
#jdbc.password=affkNFidzI0=
jdbc.url=jdbc:mysql://192.168.177.10:3306/hscloud?useUnicode=true&amp;characterEncoding=utf-8
jdbc.username=root
jdbc.password=5ETYxD9v7bleZIqznWt9xA==
#初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 initialPoolSize
jdbc.initConns=10
#连接池中保留的最小连接数。Default: 15 maxPoolSize
jdbc.minConns=5
#连接池中保留的最大连接数。Default: 15 maxPoolSize
jdbc.maxConns=50
#当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 acquireIncrement
jdbc.increment=3
#当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0；
jdbc.checkoutTimeout=1000
#每60秒检查所有连接池中的空闲连接。Default: 0  idleConnectionTestPeriod
jdbc.connectionTestPeriod=60
#最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0  maxIdleTime
jdbc.maxIdleTime=60
#连接关闭时默认将所有未提交的操作回滚。Default: false autoCommitOnClose
jdbc.autoCommitOnClose=true
#因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable等方法来提升连接测试的性能。Default: false testConnectionOnCheckout
jdbc.connectionOnCheckout=true
#如果设为true那么在取得连接的同时将校验连接的有效性。Default: false  testConnectionOnCheckin
jdbc.connectionOnCheckin=true
#定义在从数据库获取新连接失败后重复尝试的次数。Default: 30  acquireRetryAttempts
jdbc.acquireRetryAttempts=30
#两次连接中间隔时间，单位毫秒。Default: 1000 acquireRetryDelay
jdbc.acquireRetryDelay=1000
#获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false  breakAfterAcquireFailure
jdbc.breakAfterAcquireFailure=true

####set#####
jdbc.set.sync_event.new.table=hc_event_sync
jdbc.set.sync_event.new.sql=insert into hc_event_sync (id,message,event_time,deal_time,finish_time,update_time,type,biz_type,operator_id,operator,operator_type,messager,result,error_info,remark,job_id,reference_id,uuid,vm_state,vm_task,fixed_ip,floating_ip,method,product,executeMethod) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
jdbc.set.sync_event.new.column=@id,message,event_time,deal_time,finish_time,update_time,type,biz_type,operator_id,operator,operator_type,messager,result,error_info,remark,job_id,reference_id,uuid,vm_state,vm_task,fixed_ip,floating_ip,method,product,executeMethod
jdbc.set.sync_event.new.class=com.pactera.hscloud.openstackhandler.bo.SyncEvent

jdbc.set.sync_event.update.table=hc_event_sync
jdbc.set.sync_event.update.sql=update hc_event_sync set finish_time = (?) where id = (?);
jdbc.set.sync_event.update.column=finish_time,id
jdbc.set.sync_event.update.class=com.pactera.hscloud.openstackhandler.bo.SyncEvent

jdbc.get.hc_vpdc_instance.sql=select * from  hc_vpdc_instance
jdbc.get.hc_vpdc_instance.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCInstance

jdbc.set.sync_hc_vpdc_instance.update.table=hc_vpdc_instance
jdbc.set.sync_hc_vpdc_instance.update.sql=update hc_vpdc_instance set vm_id = (?) ,nodeName=(?) where id=(?)
jdbc.set.sync_hc_vpdc_instance.update.column=vm_id,nodeName,id
jdbc.set.sync_hc_vpdc_instance.update.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCInstance


jdbc.get.hc_vpdc_reference.sql=select * from  hc_vpdc_reference
jdbc.get.hc_vpdc_reference.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCReference

jdbc.set.sync_hc_vpdc_reference.update.table=hc_vpdc_reference
jdbc.set.sync_hc_vpdc_reference.update.sql=update hc_vpdc_reference set vm_status = (?),vm_task_status=(?),vm_innerIP=(?),vm_outerIP=(?) ,radom_user=(?),radom_pwd=(?),createflag=(?),imageId=(?),osId=(?),try_time=(?) where id=(?)
jdbc.set.sync_hc_vpdc_reference.update.column=vm_status,vm_task_status,vm_innerIP,vm_outerIP,radom_user,radom_pwd,createflag,imageId,osId,try_time,id
jdbc.set.sync_hc_vpdc_reference.update.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCReference

jdbc.set.sync_hc_vpdc_reference.state.update.table=hc_vpdc_reference
jdbc.set.sync_hc_vpdc_reference.state.update.sql=update hc_vpdc_reference set vm_status = (?),vm_task_status=(?),process_state=(?),event_time=(?) where (event_time is null or event_time<=(?)) and id=(?)
jdbc.set.sync_hc_vpdc_reference.state.update.column=vm_status,vm_task_status,process_state,event_time,event_time,id
jdbc.set.sync_hc_vpdc_reference.state.update.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCReference

jdbc.set.sync_hc_vpdc_reference.nostate.update.table=hc_vpdc_reference
jdbc.set.sync_hc_vpdc_reference.nostate.update.sql=update hc_vpdc_reference set vm_innerIP=(?),vm_outerIP=(?) ,radom_user=(?),radom_pwd=(?),createflag=(?),imageId=(?),osId=(?) where id=(?)
jdbc.set.sync_hc_vpdc_reference.nostate.update.column=vm_innerIP,vm_outerIP,radom_user,radom_pwd,createflag,imageId,osId,id
jdbc.set.sync_hc_vpdc_reference.nostate.update.class=com.pactera.hscloud.openstackhandler.bo.O_VPDCReference

jdbc.get.hc_event_resource.sql=select * from  hc_event_resource
jdbc.get.hc_event_resource.class=com.pactera.hscloud.openstackhandler.bo.ResourceResult

jdbc.set.sync_hc_event_resource.update.table=hc_event_resource
jdbc.set.sync_hc_event_resource.update.sql=update hc_event_resource set update_time = (?),result=(?),error_info=(?) where id=(?)
jdbc.set.sync_hc_event_resource.update.column=update_time,result,error_info,id
jdbc.set.sync_hc_event_resource.update.class=com.pactera.hscloud.openstackhandler.bo.ResourceResult

jdbc.get.hc_event_vmops.sql=select * from  hc_event_vmops
jdbc.get.hc_event_vmops.class=com.pactera.hscloud.openstackhandler.bo.OPSResult

jdbc.set.sync_hc_event_vmops.update.table=hc_event_vmops
jdbc.set.sync_hc_event_vmops.update.sql=update hc_event_vmops set update_time = (?),result=(?),error_info=(?) where id=(?)
jdbc.set.sync_hc_event_vmops.update.column=update_time,result,error_info,id
jdbc.set.sync_hc_event_vmops.update.class=com.pactera.hscloud.openstackhandler.bo.OPSResult


jdbc.get.hc_ip_detail.sql=select ip,status,modify_time,object_id,object_type,host_id from  hc_ip_detail
jdbc.get.hc_ip_detail.class=com.pactera.hscloud.openstackhandler.bo.O_IP


jdbc.set.sync_hc_ip_detail.update.table=hc_ip_detail
jdbc.set.sync_hc_ip_detail.update.sql=update hc_ip_detail set status = (?),host_id=(?),object_id=(?),object_type=(?),modify_time=(?) where ip=(?)
jdbc.set.sync_hc_ip_detail.update.column=status,host_id,object_id,object_type,modify_time,ip
jdbc.set.sync_hc_ip_detail.update.class=com.pactera.hscloud.openstackhandler.bo.O_IP

jdbc.get.hc_vpdcreference_extdisk.sql=select * from  hc_vpdcReference_extdisk
jdbc.get.hc_vpdcreference_extdisk.class=com.pactera.hscloud.openstackhandler.bo.O_VPDC_Extdisk

jdbc.set.sync_hc_vpdcreference_extdisk.update.table=hc_vpdcReference_extdisk
jdbc.set.sync_hc_vpdcreference_extdisk.update.sql=update hc_vpdcReference_extdisk set name=(?),vmId=(?),referenceId=(?),volumeId = (?) where id=(?)
jdbc.set.sync_hc_vpdcreference_extdisk.update.column=name,vmId,referenceId,volumeId,id
jdbc.set.sync_hc_vpdcreference_extdisk.update.class=com.pactera.hscloud.openstackhandler.bo.O_VPDC_Extdisk

jdbc.get.hc_vm_snapshot.sql=select * from  hc_vm_snapshot
jdbc.get.hc_vm_snapshot.class=com.pactera.hscloud.openstackhandler.bo.O_Snapshot

jdbc.set.sync_hc_vm_snapshot.update.table=hc_vm_snapshot
jdbc.set.sync_hc_vm_snapshot.update.sql=update hc_vm_snapshot set status = (?),snapShot_id=(?),instanceId=(?) where id=(?)
jdbc.set.sync_hc_vm_snapshot.update.column=status,snapShot_id,instanceId,id
jdbc.set.sync_hc_vm_snapshot.update.class=com.pactera.hscloud.openstackhandler.bo.O_Snapshot

jdbc.get.hc_mail_template.sql=select * from  hc_mail_template
jdbc.get.hc_mail_template.class=com.pactera.hscloud.openstackhandler.bo.O_MailTemplate

jdbc.get.hc_domain.sql=select * from  hc_domain
jdbc.get.hc_domain.class=com.pactera.hscloud.openstackhandler.bo.O_Domain

jdbc.set.hc_email_queue.new.table=hc_email_queue
jdbc.set.hc_email_queue.new.sql=insert into hc_email_queue (body,create_time,receive_users,status,subject,domain_id) values(?,?,?,?,?,?);
jdbc.set.hc_email_queue.new.column=body,create_time,receive_users,status,subject,domain_id
jdbc.set.hc_email_queue.new.class=com.pactera.hscloud.openstackhandler.bo.O_EmailQueue

jdbc.get.hc_node.sql=select id,name from hc_node
jdbc.get.hc_node.class=com.pactera.hscloud.openstackhandler.bo.O_NodeName


jdbc.set.hc_controlpanel_user.new.table=hc_controlpanel_user
jdbc.set.hc_controlpanel_user.new.sql=insert into hc_controlpanel_user (create_date,update_date,create_Id,status,userPassword,vmIP,vmId,version) values(?,?,?,?,?,?,?,?);
jdbc.set.hc_controlpanel_user.new.column=create_date,update_date,create_Id,status,userPassword,vmIP,vmId,version
jdbc.set.hc_controlpanel_user.new.class=com.pactera.hscloud.openstackhandler.bo.O_PanelUser

jdbc.get.hc_controlpanel_user.sql=select * from hc_controlpanel_user
jdbc.get.hc_controlpanel_user.class=com.pactera.hscloud.openstackhandler.bo.O_PanelUser

jdbc.set.hc_controlpanel_user.update.table=hc_controlpanel_user
jdbc.set.hc_controlpanel_user.update.sql=update hc_controlpanel_user set update_date = (?),create_Id=(?),status=(?),userPassword=(?),version=(?) where vmId=(?)
jdbc.set.hc_controlpanel_user.update.column=update_date,create_Id,status,userPassword,version,vmId
jdbc.set.hc_controlpanel_user.update.class=com.pactera.hscloud.openstackhandler.bo.O_PanelUser

jdbc.set.hc_message.new.table=hc_message
jdbc.set.hc_message.new.sql=insert into hc_message (create_time,message,messge_type,status,user_id) values(?,?,?,?,?);
jdbc.set.hc_message.new.column=create_time,message,messge_type,status,user_id
jdbc.set.hc_message.new.class=com.pactera.hscloud.openstackhandler.bo.O_Message

jdbc.get.hc_user.sql=select id,domain_id,email from hc_user
jdbc.get.hc_user.class=com.pactera.hscloud.openstackhandler.bo.O_User

jdbc.get.hc_os.sql=select os_id, port from hc_os
jdbc.get.hc_os.class=com.pactera.hscloud.openstackhandler.bo.O_OS

jdbc.get.hc_vpdcnetwork_object.sql=select * from hc_vpdcnetwork_object
jdbc.get.hc_vpdcnetwork_object.class=com.pactera.hscloud.openstackhandler.bo.O_Network

jdbc.set.hc_vpdcnetwork_object.update.table=hc_vpdcnetwork_object
jdbc.set.hc_vpdcnetwork_object.update.sql=update hc_vpdcnetwork_object set networkId = (?),objectUUID=(?) where id=(?)
jdbc.set.hc_vpdcnetwork_object.update.column=networkId,objectUUID,id
jdbc.set.hc_vpdcnetwork_object.update.class=com.pactera.hscloud.openstackhandler.bo.O_Network

jdbc.set.hc_vpdcnetwork_object.uuid.update.table=hc_vpdcnetwork_object
jdbc.set.hc_vpdcnetwork_object.uuid.update.sql=update hc_vpdcnetwork_object set objectUUID=(?) where id=(?)
jdbc.set.hc_vpdcnetwork_object.uuid.update.column=objectUUID,id
jdbc.set.hc_vpdcnetwork_object.uuid.update.class=com.pactera.hscloud.openstackhandler.bo.O_Network

jdbc.get.hc_vpdc_vrouter.sql=select * from  hc_vpdc_vrouter
jdbc.get.hc_vpdc_vrouter.class=com.pactera.hscloud.openstackhandler.bo.O_Router

jdbc.set.sync_hc_vpdc_vrouter.update.table=hc_vpdc_vrouter
jdbc.set.sync_hc_vpdc_vrouter.update.sql=update hc_vpdc_vrouter set name=(?),fixIP = (?),floatingIP=(?),router_uuid=(?),router_status = (?),router_task_status=(?),nodeName=(?),process_state=(?),event_time=(?) where (event_time is null or event_time<=(?)) and id=(?)
jdbc.set.sync_hc_vpdc_vrouter.update.column=name,fixIP,floatingIP,router_uuid,router_status,router_task_status,nodeName,process_state,event_time,event_time,id
jdbc.set.sync_hc_vpdc_vrouter.update.class=com.pactera.hscloud.openstackhandler.bo.O_Router

jdbc.set.sync_hc_vpdc_vrouter.state.update.table=hc_vpdc_vrouter
jdbc.set.sync_hc_vpdc_vrouter.state.update.sql=update hc_vpdc_vrouter set router_status = (?),router_task_status=(?),nodeName=(?),process_state=(?),event_time=(?) where (event_time is null or event_time<=(?)) and id=(?)
jdbc.set.sync_hc_vpdc_vrouter.state.update.column=router_status,router_task_status,nodeName,process_state,event_time,event_time,id
jdbc.set.sync_hc_vpdc_vrouter.state.update.class=com.pactera.hscloud.openstackhandler.bo.O_Router

jdbc.set.sync_hc_vpdc_vrouter.nostate.update.table=hc_vpdc_vrouter
jdbc.set.sync_hc_vpdc_vrouter.nostate.update.sql=update hc_vpdc_vrouter set fixIP = (?),floatingIP=(?),router_uuid=(?),nodeName=(?),event_time=(?) where (event_time is null or event_time<=(?)) and id=(?)
jdbc.set.sync_hc_vpdc_vrouter.nostate.update.column=fixIP,floatingIP,router_uuid,nodeName,event_time,event_time,id
jdbc.set.sync_hc_vpdc_vrouter.nostate.update.class=com.pactera.hscloud.openstackhandler.bo.O_Router

jdbc.get.networkvo.sql=select vn.network_id networkId,vl.lanId securytyVlanId from hc_vpdc_network vn left join hc_vpdcnetwork_object vo on vn.id = vo.networkId left join hc_vpdc_lan vl on vn.securyty_lan = vl.id
jdbc.get.networkvo.class=com.pactera.hscloud.openstackhandler.vo.NetWorkVO


   


